# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# About 'EXTRA_DOCKER_PARAMS=--net cloudbuild':
# Steps use local Docker network named cloudbuild as described here:
# https://cloud.google.com/cloud-build/docs/overview#build_configuration_and_build_steps

timeout: 1800s # 30m
options:
  workerPool: $PROJECT_ID/gcb-workers-pool
substitutions:
  _CLUSTER_NAME: marketplace-testing
  _CLUSTER_LOCATION: us-central1
  _VERIFY_ENV_VARS: '{}'
steps:

- id: Pull Dev Image
  name: gcr.io/cloud-builders/docker
  waitFor:
  - '-'
  dir: k8s
  entrypoint: bash
  args:
  - -exc
  - |
    TAG="$$(cat ./MARKETPLACE_TOOLS_TAG)"
    docker pull "gcr.io/cloud-marketplace-tools/k8s/dev:$$TAG"
    docker tag "gcr.io/cloud-marketplace-tools/k8s/dev:$$TAG" "gcr.io/cloud-marketplace-tools/k8s/dev:local"

- id: Initialize Credentials
  name: gcr.io/cloud-builders/gcloud
  waitFor:
  - '-'
  entrypoint: bash
  args:
  - -exc
  - |
    gcloud container clusters get-credentials '${_CLUSTER_NAME}' --zone '${_CLUSTER_LOCATION}' --project '$PROJECT_ID'
    mkdir -p /workspace/.kube/
    cp -r $$HOME/.kube/ /workspace/
    mkdir -p /workspace/.config/gcloud/
    cp -r $$HOME/.config/gcloud/ /workspace/.config/

- id: Install CRDs
  name: gcr.io/cloud-marketplace-tools/k8s/dev:local
  env:
  - 'KUBE_CONFIG=/workspace/.kube'
  - 'GCLOUD_CONFIG=/workspace/.config/gcloud'
  - 'EXTRA_DOCKER_PARAMS=--net cloudbuild'
  dir: k8s/$_SOLUTION_NAME
  entrypoint: bash
  args:
  - -exc
  - make crd/install

- id: Run diagnostic tool
  name: gcr.io/cloud-marketplace-tools/k8s/dev:local
  env:
  - 'KUBE_CONFIG=/workspace/.kube'
  - 'GCLOUD_CONFIG=/workspace/.config/gcloud'
  - 'EXTRA_DOCKER_PARAMS=--net cloudbuild'
  dir: k8s/$_SOLUTION_NAME
  entrypoint: bash
  args:
  - -exc
  - make app/doctor

- id: Build Solution
  name: gcr.io/cloud-marketplace-tools/k8s/dev:local
  env:
  - 'KUBE_CONFIG=/workspace/.kube'
  - 'GCLOUD_CONFIG=/workspace/.config/gcloud'
  - 'EXTRA_DOCKER_PARAMS=--net cloudbuild'
  dir: k8s/$_SOLUTION_NAME
  entrypoint: bash
  args:
  - -exc
  - make -j4 app/build

- id: Verify Solution
  name: gcr.io/cloud-marketplace-tools/k8s/dev:local
  env:
  - 'KUBE_CONFIG=/workspace/.kube'
  - 'GCLOUD_CONFIG=/workspace/.config/gcloud'
  - 'EXTRA_DOCKER_PARAMS=--net cloudbuild'
  dir: k8s/$_SOLUTION_NAME
  entrypoint: bash
  args:
  - -exc
  - |
    set -eo pipefail
    # Export the environment variables passed as json key/value map
    # Example, --substitutions _VERIFY_ENV_VARS='{\"key1\": \"value1\", \"key2\":\"value2\"}' results in:
    #   export key1=value1
    #   export key2=value2
    for extra_var in $(echo $_VERIFY_ENV_VARS | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]" ); do
      export $$extra_var
    done
    make -j4 app/verify
